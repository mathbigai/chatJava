/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vision.cadastro;

import Conexao.conexao;
import dao.daoCadastroUsuario;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileNameExtensionFilter;
import modal.modalCadastroUsuario;
import modal.table.TableModelUsuario;

/**
 *
 * @author User
 */
public class telaCadastroUsuario extends javax.swing.JFrame {

    conexao conn = new conexao();
    modalCadastroUsuario mUsuario = new modalCadastroUsuario();
    daoCadastroUsuario dUsuario = new daoCadastroUsuario();
    TableModelUsuario tableUsuario = new TableModelUsuario();
    private int flag;
    BufferedImage imagemGeral;

    /**
     * Creates new form telaCadastroUsuario
     */
    public telaCadastroUsuario() {
        initComponents();
        disposicaoBotoes(1);
        jTableUsuarios.setModel(tableUsuario);
        atualizaTabela("SELECT * FROM TBL_USUARIO");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelGeral = new javax.swing.JPanel();
        jLabelCadastroUsuario = new javax.swing.JLabel();
        jPanelFormulario = new javax.swing.JPanel();
        jLabelID = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabelNome = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabelLogin = new javax.swing.JLabel();
        jTextFieldLogin = new javax.swing.JTextField();
        jLabelSenha = new javax.swing.JLabel();
        jPasswordFieldSenha = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();
        jLabelFoto = new javax.swing.JLabel();
        jButtonSelecionarImagem = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Usuario");

        jPanelGeral.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelCadastroUsuario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabelCadastroUsuario.setText("Cadastro de Usu√°rio");

        jPanelFormulario.setBorder(javax.swing.BorderFactory.createTitledBorder("Formulario"));

        jLabelID.setText("ID");

        jLabelNome.setText("Nome");

        jLabelLogin.setText("Login");

        jLabelSenha.setText("Senha");

        javax.swing.GroupLayout jPanelFormularioLayout = new javax.swing.GroupLayout(jPanelFormulario);
        jPanelFormulario.setLayout(jPanelFormularioLayout);
        jPanelFormularioLayout.setHorizontalGroup(
            jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFormularioLayout.createSequentialGroup()
                        .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNome))
                    .addGroup(jPanelFormularioLayout.createSequentialGroup()
                        .addComponent(jLabelID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelFormularioLayout.createSequentialGroup()
                        .addComponent(jLabelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelFormularioLayout.setVerticalGroup(
            jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFormularioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelID)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNome)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLogin)
                    .addComponent(jTextFieldLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSenha)
                    .addComponent(jPasswordFieldSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsuariosMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableUsuariosMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsuarios);

        jLabelFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButtonSelecionarImagem.setText("Selecionar Imagem");
        jButtonSelecionarImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelecionarImagemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelGeralLayout = new javax.swing.GroupLayout(jPanelGeral);
        jPanelGeral.setLayout(jPanelGeralLayout);
        jPanelGeralLayout.setHorizontalGroup(
            jPanelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                    .addGroup(jPanelGeralLayout.createSequentialGroup()
                        .addGroup(jPanelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelCadastroUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanelGeralLayout.createSequentialGroup()
                                .addComponent(jPanelFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelGeralLayout.createSequentialGroup()
                                .addComponent(jLabelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14))
                            .addComponent(jButtonSelecionarImagem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanelGeralLayout.setVerticalGroup(
            jPanelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelGeralLayout.createSequentialGroup()
                        .addComponent(jLabelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSelecionarImagem))
                    .addGroup(jPanelGeralLayout.createSequentialGroup()
                        .addComponent(jLabelCadastroUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonNovo.setText("Novo");
        jButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNovoActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonNovo)
                .addGap(188, 188, 188)
                .addComponent(jButtonCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSalvar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNovo)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonSalvar))
                .addGap(0, 15, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNovoActionPerformed
        if (jButtonNovo.getText().equals("Novo")) {
            flag = 1;
        } else {
            flag = 2;
        }

        disposicaoBotoes(2);
    }//GEN-LAST:event_jButtonNovoActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        limpaCampos();
        disposicaoBotoes(1);
        jButtonNovo.setText("Novo");
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if (jTextFieldNome.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo nome est√° vazio");
            jTextFieldNome.setBackground(Color.red);
        } else {
            jTextFieldNome.setBackground(Color.white);
        }
        if (jTextFieldLogin.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo login est√° vazio");
            jTextFieldLogin.setBackground(Color.red);
        } else {
            jTextFieldLogin.setBackground(Color.white);
        }
        if (jPasswordFieldSenha.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "O campo senha est√° vazio");
            jPasswordFieldSenha.setBackground(Color.red);
        } else {
            jPasswordFieldSenha.setBackground(Color.white);
        }

        if (jTextFieldLogin.getBackground() == Color.white
                && jTextFieldNome.getBackground() == Color.white
                && jPasswordFieldSenha.getBackground() == Color.white) {
            mUsuario.setAtivo(true);
            mUsuario.setLogin(jTextFieldLogin.getText());
            mUsuario.setNome(jTextFieldNome.getText());
            mUsuario.setSenha(jPasswordFieldSenha.getText());
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            try {
                ImageIO.write(imagemGeral, "jpg", baos);
                mUsuario.setFoto(baos.toByteArray());
            } catch (IOException ex) {
                Logger.getLogger(telaCadastroUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (flag == 1) {
                try {
                    dUsuario.create(mUsuario);
                    limpaCampos();
                    disposicaoBotoes(1);
                    atualizaTabela("SELECT * FROM TBL_USUARIO");
                    jButtonNovo.setText("Novo");
                } catch (SQLException ex) {
                    Logger.getLogger(telaCadastroUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                mUsuario.setId(Integer.parseInt(jTextFieldID.getText()));
                try {
                    dUsuario.update(mUsuario);
                    limpaCampos();
                    disposicaoBotoes(1);
                    atualizaTabela("SELECT * FROM TBL_USUARIO");
                    jButtonNovo.setText("Novo");
                } catch (SQLException ex) {
                    Logger.getLogger(telaCadastroUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonSelecionarImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelecionarImagemActionPerformed
        caminhoFoto();
    }//GEN-LAST:event_jButtonSelecionarImagemActionPerformed

    private void jTableUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsuariosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableUsuariosMouseClicked

    private void jTableUsuariosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsuariosMouseReleased
        flag = 2;
        jButtonNovo.setText("Alterar");
        if (jTableUsuarios.getSelectedRow() != -1) {
            jTextFieldID.setText(jTableUsuarios.getValueAt(jTableUsuarios.getSelectedRow(), 0).toString());
            jTextFieldNome.setText(jTableUsuarios.getValueAt(jTableUsuarios.getSelectedRow(), 1).toString());
            jTextFieldLogin.setText(jTableUsuarios.getValueAt(jTableUsuarios.getSelectedRow(), 2).toString());
            conn.executaSQL("SELECT usuario_senha, usuario_foto FROM tbl_usuario WHERE usuario_id = " + jTextFieldID.getText());
            try {
                if (conn.rs.next()) {
                    jPasswordFieldSenha.setText(conn.rs.getString("usuario_senha"));

                    if (conn.rs.getBytes("usuario_foto") != null && conn.rs.getBytes("usuario_foto").length > 0) {
                        byte[] imagemBytes = conn.rs.getBytes("usuario_foto");
                        ByteArrayInputStream bais = new ByteArrayInputStream(imagemBytes);
                        BufferedImage imagem = ImageIO.read(bais);
                        ImageIcon imagemIcon = new ImageIcon(redimensionarImagem(imagem, jLabelFoto.getWidth(), jLabelFoto.getHeight()));
                        jLabelFoto.setIcon(imagemIcon);
                    } else {
                        jLabelFoto.setIcon(null);
                    }
                }
                conn.rs.close();
            } catch (SQLException ex) {

            } catch (IOException ex) {
                Logger.getLogger(telaCadastroUsuario.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Para alterar, selecione algum item.");
        }

    }//GEN-LAST:event_jTableUsuariosMouseReleased

    private void disposicaoBotoes(int flag) {
        if (flag == 1) {
            jButtonNovo.setEnabled(true);
            jButtonCancelar.setEnabled(false);
            jButtonSalvar.setEnabled(false);
            for (Component c : jPanelFormulario.getComponents()) {
                if (c instanceof JTextField) {
                    ((JTextField) c).setEnabled(false);
                }
            }
            jButtonSelecionarImagem.setEnabled(false);
            jPasswordFieldSenha.setEnabled(false);
            jTextFieldID.setEnabled(false);
        } else {
            jButtonNovo.setEnabled(false);
            jButtonCancelar.setEnabled(true);
            jButtonSalvar.setEnabled(true);
            for (Component c : jPanelFormulario.getComponents()) {
                if (c instanceof JTextField) {
                    ((JTextField) c).setEnabled(true);
                }
            }
            jPasswordFieldSenha.setEnabled(true);
            jButtonSelecionarImagem.setEnabled(true);
            jTextFieldID.setEnabled(false);
        }
    }

    private void limpaCampos() {
        for (Component c : jPanelFormulario.getComponents()) {
            if (c instanceof JTextField) {
                ((JTextField) c).setText("");

            }
        }
        jPasswordFieldSenha.setText("");
        jLabelFoto.setIcon(null);
    }

    private void caminhoFoto() {
        JFileChooser fileChooser = new JFileChooser();

        // Configura um filtro para permitir apenas arquivos de imagem JPEG
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivos de Imagem", "jpg", "jpeg", "png");
        fileChooser.setFileFilter(filter);

        // Abre a caixa de di√°logo para escolher um arquivo
        int escolha = fileChooser.showOpenDialog(null);

        if (escolha == JFileChooser.APPROVE_OPTION) {
            // O usu√°rio selecionou um arquivo
            String caminhoArquivo = fileChooser.getSelectedFile().getAbsolutePath();
            File arquivoSelecionado = fileChooser.getSelectedFile();

            lidarComFoto(arquivoSelecionado, caminhoArquivo);

        } else {
            System.out.println("Nenhum arquivo selecionado.");
        }
    }

    public BufferedImage carregarImagem(File arquivo) {
        try {
            return ImageIO.read(arquivo);
        } catch (IOException e) {
            e.printStackTrace();
            return null; // Tratamento de erro, retorne null ou fa√ßa algo apropriado aqui
        }
    }

    private void lidarComFoto(File arquivo, String caminhoImagem) {

        try {
            // Carrega a imagem do arquivo
            BufferedImage imagem = ImageIO.read(new File(caminhoImagem));
            imagemGeral = imagem;
            BufferedImage imagemOriginal = carregarImagem(arquivo);
            // Verifica se a imagem foi carregada com sucesso
            if (imagem != null) {
                ImageIcon imagemIcon = new ImageIcon(redimensionarImagem(imagemOriginal, jLabelFoto.getWidth(), jLabelFoto.getHeight()));
                jLabelFoto.setIcon(imagemIcon);

                System.out.println("Imagem carregada com sucesso!");
            } else {
                System.out.println("N√£o foi poss√≠vel carregar a imagem.");
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private Image redimensionarImagem(BufferedImage imagemOriginal, int largura, int altura) {
        if (imagemOriginal != null) {
            double proporcaoLargura = (double) largura / imagemOriginal.getWidth();
            double proporcaoAltura = (double) altura / imagemOriginal.getHeight();
            double fatorEscala = Math.min(proporcaoLargura, proporcaoAltura);

            int novaLargura = (int) (imagemOriginal.getWidth() * fatorEscala);
            int novaAltura = (int) (imagemOriginal.getHeight() * fatorEscala);

            Image imagemRedimensionada = imagemOriginal.getScaledInstance(novaLargura, novaAltura, Image.SCALE_SMOOTH);

            // Crie uma imagem intermedi√°ria com a resolu√ß√£o desejada
            BufferedImage imagemIntermediaria = new BufferedImage(largura, altura, BufferedImage.TYPE_INT_RGB);
            Graphics2D g2d = imagemIntermediaria.createGraphics();
            g2d.drawImage(imagemRedimensionada, (largura - novaLargura) / 2, (altura - novaAltura) / 2, null);
            g2d.dispose();

            return imagemIntermediaria;
        }
        return null;
    }

    public void atualizaTabela(String sql) {
        tableUsuario.dados.removeAll(tableUsuario.dados);
        conn.executaSQL(sql);
        try {
            while (conn.rs.next()) {
                modalCadastroUsuario modalQ = new modalCadastroUsuario();

                modalQ.setId(conn.rs.getInt("usuario_id"));
                modalQ.setNome(conn.rs.getString("usuario_nome"));
                modalQ.setLogin(conn.rs.getString("usuario_login"));
                tableUsuario.addRow(modalQ);
            }
            conn.rs.close();
        } catch (SQLException ex) {

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaCadastroUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JButton jButtonSelecionarImagem;
    private javax.swing.JLabel jLabelCadastroUsuario;
    private javax.swing.JLabel jLabelFoto;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelLogin;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelSenha;
    private javax.swing.JPanel jPanelFormulario;
    private javax.swing.JPanel jPanelGeral;
    private javax.swing.JPasswordField jPasswordFieldSenha;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsuarios;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldLogin;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
